from disnake.ext import commands

from components.ui.views import StarsView
from objects.bot import NoirBot
from objects.exceptions import *
from validators.player import check_player_decorator


class StarsCog(commands.Cog):
    def __init__(self, bot: NoirBot):
        self.bot = bot
        self.pool = bot.pool

    # -------------------------------------------------------------------------------------------------------------------------------------
    # –ò–∑–±—Ä–∞–Ω–Ω—ã–µ

    # TODO: Database

    @commands.slash_command(name="star", dm_permission=False)
    async def star(self, ctx):
        pass

    @star.sub_command(description="‚≠ê | –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    async def open(self, ctx):

        stars = self.bot.db.stars.get_stars(ctx.author.id)

        if stars and stars.get("tracks"):
            try:
                view = StarsView(
                    songs=stars.get("tracks"),
                    player=self.bot.node.get_player(ctx.guild.id),
                )
                return await view.refresh_pages(ctx)
            except BaseException:
                return await ctx.edit_original_message(
                    embed=self.bot.embedding.get(
                        title="üü† | –ü—É—Å—Ç–æ",
                        description="–£ –≤–∞—Å –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤",
                        color="warning",
                    ),
                    # embed=genembed(
                    #     title="", description="–ü–æ—Ö–æ–∂–µ, —É –≤–∞—Å –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤"
                    # )
                )

        else:
            return await ctx.edit_original_message(
                embed=self.bot.embedding.get(
                    title="üü† | –ü—É—Å—Ç–æ",
                    description="–£ –≤–∞—Å –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤",
                    color="warning",
                ),
            )

    # TODO: Database

    @check_player_decorator()
    @star.sub_command(description="üü£ | —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    async def add(self, ctx):
        player = self.bot.node.get_player(ctx.guild_id)

        if not player.current:
            raise NoCurrent("–Ω–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞")

        if not player.current.info.isStream:
            track = player.current
            self.bot.db.stars.add_to_stars(ctx.author.id, track.model_dump())

            await ctx.send(
                embed=self.bot.embedding.get(
                    title="üü¢ | –î–æ–±–∞–≤–ª–µ–Ω–æ",
                    description="–ó–≤–µ–∑–¥–æ—á–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ `‚≠ê —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –Ω–∞–±–æ—Ä`",
                    color="accent",
                ),
                # embed=genembed(
                #     title="",
                #     description="## –ó–≤–µ–∑–¥–æ—á–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞.\n\n–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –µ–µ –≤ —Å–≤–æ–µ–º [–ø—Ä–æ—Ñ–∏–ª–µ](https://noirplayer.su/me/stars).",
                # ),
                ephemeral=True,
            )
        else:
            return await ctx.delete_original_message()


def setup(bot: commands.Bot):
    bot.add_cog(StarsCog(bot))
